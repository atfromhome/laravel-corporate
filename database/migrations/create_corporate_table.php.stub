<?php

use FromHome\Corporate\CorporateRegistrar;
use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration {
    public function up(): void
    {
        $this->runningBranchMigration();
        $this->runningDivisionMigration();
        $this->runningPositionMigration();
        $this->runningEmployeeMigration();
    }

    public function down(): void
    {
        Schema::dropIfExists('branches');
        Schema::dropIfExists('divisions');
        Schema::dropIfExists('positions');
        Schema::dropIfExists('employees');
    }

    private function runningBranchMigration(): void
    {
        if (CorporateRegistrar::runningBranchMigration()) {
            Schema::create('branches', static function (Blueprint $table) {
                $table->id();
                $table->uuid()->unique();
                $table->string('name');
                $table->timestamp('deactivated_at')->nullable();
                $table->foreignId('parent_id')->nullable()->constrained('branches');
                $table->timestamps();
            });
        }
    }

    private function runningDivisionMigration(): void
    {
        if (CorporateRegistrar::runningDivisionMigration()) {
            Schema::create('divisions', static function (Blueprint $table) {
                $table->id();
                $table->uuid()->unique();
                $table->string('name');
                $table->timestamp('deactivated_at')->nullable();
                $table->foreignId('parent_id')->nullable()->constrained('divisions');
                $table->timestamps();
            });
        }
    }

    private function runningPositionMigration(): void
    {
        if (CorporateRegistrar::runningPositionMigration()) {
            Schema::create('positions', static function (Blueprint $table) {
                $table->id();
                $table->uuid()->unique();
                $table->string('name');
                $table->timestamp('deactivated_at')->nullable();
                $table->foreignId('parent_id')->nullable()->constrained('positions');
                $table->timestamps();
            });
        }
    }

    private function runningEmployeeMigration(): void
    {
        if (!Schema::hasTable('branches')) {
            CorporateRegistrar::runBranchMigration();

            $this->runningBranchMigration();
        }

        if (!Schema::hasTable('divisions')) {
            CorporateRegistrar::runDivisionMigration();

            $this->runningDivisionMigration();
        }

        if (!Schema::hasTable('positions')) {
            CorporateRegistrar::runPositionMigration();

            $this->runningPositionMigration();
        }

        if (CorporateRegistrar::runningEmployeeMigration()) {
            Schema::create('employees', static function (Blueprint $table) {
                $table->id();
                $table->uuid()->unique();
                $table->foreignId('branch_id')->constrained();
                $table->string('name');
                $table->string('email', 141)->unique();
                $table->string('phone', 25)->nullable();
                $table->string('phone_country', 2)->nullable();
                $table->foreignId('division_id')->constrained();
                $table->foreignId('position_id')->constrained();
                $table->timestamp('deactivated_at')->nullable();
                $table->timestamps();
            });
        }
    }
};
